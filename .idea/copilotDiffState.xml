<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Backend/pom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Backend/pom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;&#9;xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;&#9;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#9;&lt;parent&gt;&#10;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&#10;&#9;&#9;&lt;version&gt;3.5.4&lt;/version&gt;&#10;&#9;&#9;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;&#10;&#9;&lt;/parent&gt;&#10;&#9;&lt;groupId&gt;com.quantify&lt;/groupId&gt;&#10;&#9;&lt;artifactId&gt;quantify-backend&lt;/artifactId&gt;&#10;&#9;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&#10;&#9;&lt;name&gt;quantify-backend&lt;/name&gt;&#10;&#9;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&#10;&#9;&lt;url/&gt;&#10;&#9;&lt;licenses&gt;&#10;&#9;&#9;&lt;license/&gt;&#10;&#9;&lt;/licenses&gt;&#10;&#9;&lt;developers&gt;&#10;&#9;&#9;&lt;developer/&gt;&#10;&#9;&lt;/developers&gt;&#10;&#9;&lt;scm&gt;&#10;&#9;&#9;&lt;connection/&gt;&#10;&#9;&#9;&lt;developerConnection/&gt;&#10;&#9;&#9;&lt;tag/&gt;&#10;&#9;&#9;&lt;url/&gt;&#10;&#9;&lt;/scm&gt;&#10;&#9;&lt;properties&gt;&#10;&#9;&#9;&lt;java.version&gt;21&lt;/java.version&gt;&#10;&#9;&lt;/properties&gt;&#10;&#9;&lt;dependencies&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-oauth2-client&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;runtime&lt;/scope&gt;&#10;&#9;&#9;&#9;&lt;optional&gt;true&lt;/optional&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.postgresql&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;postgresql&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;runtime&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;optional&gt;true&lt;/optional&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;test&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.amqp&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-rabbit-test&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;test&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.security&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;test&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-oauth2-client&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&lt;/dependencies&gt;&#10;&#10;&#9;&lt;build&gt;&#10;&#9;&#9;&lt;plugins&gt;&#10;&#9;&#9;&#9;&lt;plugin&gt;&#10;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&lt;configuration&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;annotationProcessorPaths&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;path&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/path&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/annotationProcessorPaths&gt;&#10;&#9;&#9;&#9;&#9;&lt;/configuration&gt;&#10;&#9;&#9;&#9;&lt;/plugin&gt;&#10;&#9;&#9;&#9;&lt;plugin&gt;&#10;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&lt;configuration&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;excludes&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;exclude&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/exclude&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/excludes&gt;&#10;&#9;&#9;&#9;&#9;&lt;/configuration&gt;&#10;&#9;&#9;&#9;&lt;/plugin&gt;&#10;&#9;&#9;&lt;/plugins&gt;&#10;&#9;&lt;/build&gt;&#10;&#10;&lt;/project&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;&#9;xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;&#9;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#9;&lt;parent&gt;&#10;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&#10;&#9;&#9;&lt;version&gt;3.5.4&lt;/version&gt;&#10;&#9;&#9;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;&#10;&#9;&lt;/parent&gt;&#10;&#9;&lt;groupId&gt;com.quantify&lt;/groupId&gt;&#10;&#9;&lt;artifactId&gt;quantify-backend&lt;/artifactId&gt;&#10;&#9;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&#10;&#9;&lt;name&gt;quantify-backend&lt;/name&gt;&#10;&#9;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&#10;&#9;&lt;url/&gt;&#10;&#9;&lt;licenses&gt;&#10;&#9;&#9;&lt;license/&gt;&#10;&#9;&lt;/licenses&gt;&#10;&#9;&lt;developers&gt;&#10;&#9;&#9;&lt;developer/&gt;&#10;&#9;&lt;/developers&gt;&#10;&#9;&lt;scm&gt;&#10;&#9;&#9;&lt;connection/&gt;&#10;&#9;&#9;&lt;developerConnection/&gt;&#10;&#9;&#9;&lt;tag/&gt;&#10;&#9;&#9;&lt;url/&gt;&#10;&#9;&lt;/scm&gt;&#10;&#9;&lt;properties&gt;&#10;&#9;&#9;&lt;java.version&gt;21&lt;/java.version&gt;&#10;&#9;&lt;/properties&gt;&#10;&#9;&lt;dependencies&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-oauth2-client&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;runtime&lt;/scope&gt;&#10;&#9;&#9;&#9;&lt;optional&gt;true&lt;/optional&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.postgresql&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;postgresql&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;runtime&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;optional&gt;true&lt;/optional&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;test&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.amqp&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-rabbit-test&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;test&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.security&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&lt;scope&gt;test&lt;/scope&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&#9;&lt;dependency&gt;&#10;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-starter-oauth2-client&lt;/artifactId&gt;&#10;&#9;&#9;&lt;/dependency&gt;&#10;&#9;&lt;/dependencies&gt;&#10;&#10;&#9;&lt;build&gt;&#10;&#9;&#9;&lt;plugins&gt;&#10;&#9;&#9;&#9;&lt;plugin&gt;&#10;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&lt;configuration&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;annotationProcessorPaths&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;path&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/path&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/annotationProcessorPaths&gt;&#10;&#9;&#9;&#9;&#9;&lt;/configuration&gt;&#10;&#9;&#9;&#9;&lt;/plugin&gt;&#10;&#9;&#9;&#9;&lt;plugin&gt;&#10;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&lt;configuration&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;excludes&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;exclude&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/exclude&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/excludes&gt;&#10;&#9;&#9;&#9;&#9;&lt;/configuration&gt;&#10;&#9;&#9;&#9;&lt;/plugin&gt;&#10;&#9;&#9;&lt;/plugins&gt;&#10;&#9;&lt;/build&gt;&#10;&#10;&lt;/project&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Backend/src/main/java/com/quantify/quantify_backend/config/GoogleOAuth2SuccessHandler.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Backend/src/main/java/com/quantify/quantify_backend/config/GoogleOAuth2SuccessHandler.java" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Backend/src/main/java/com/quantify/quantify_backend/service/CustomOAuth2UserService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Backend/src/main/java/com/quantify/quantify_backend/service/CustomOAuth2UserService.java" />
              <option name="updatedContent" value="package com.quantify.quantify_backend.service;&#10;&#10;import com.quantify.quantify_backend.model.user;&#10;import com.quantify.quantify_backend.repository.user_repo;&#10;import org.springframework.security.oauth2.client.userinfo.DefaultOAuth2UserService;&#10;import org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest;&#10;import org.springframework.security.oauth2.core.user.OAuth2User;&#10;import org.springframework.stereotype.Service;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;&#10;import java.util.Map;&#10;&#10;@Service&#10;public class CustomOAuth2UserService extends DefaultOAuth2UserService {&#10;&#10;    @Autowired&#10;    private user_repo userRepo;&#10;&#10;    @Override&#10;    public OAuth2User loadUser(OAuth2UserRequest userRequest) {&#10;        OAuth2User oAuth2User = super.loadUser(userRequest);&#10;        Map&lt;String, Object&gt; attributes = oAuth2User.getAttributes();&#10;&#10;        // Extract user info from Google attributes&#10;        String googleId = (String) attributes.get(&quot;sub&quot;);&#10;        String email = (String) attributes.get(&quot;email&quot;);&#10;        String username = (String) attributes.getOrDefault(&quot;name&quot;, email);&#10;&#10;        // Check if user exists&#10;        user existingUser = userRepo.findByGoogleId(googleId);&#10;        if (existingUser == null) {&#10;            // Create new user&#10;            user newUser = new user();&#10;            newUser.setGoogleId(googleId);&#10;            newUser.setEmail(email);&#10;            newUser.setUsername(username);&#10;            newUser.setPassword(&quot;&quot;); // No password for OAuth users&#10;            userRepo.save(newUser);&#10;        } else {&#10;            // Optionally update user info&#10;            existingUser.setEmail(email);&#10;            existingUser.setUsername(username);&#10;            userRepo.save(existingUser);&#10;        }&#10;        return oAuth2User;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Backend/src/main/java/com/quantify/quantify_backend/service/google_user_service.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Backend/src/main/java/com/quantify/quantify_backend/service/google_user_service.java" />
              <option name="originalContent" value="package com.quantify.quantify_backend.service;&#10;&#10;import com.quantify.quantify_backend.model.user;&#10;import com.quantify.quantify_backend.repository.user_repo;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.security.oauth2.core.user.OAuth2User;&#10;import org.springframework.stereotype.Service;&#10;&#10;import java.util.UUID;&#10;&#10;@Service&#10;public class google_user_service {&#10;&#10;    @Autowired&#10;    private user_repo userRepo;&#10;&#10;    public user processOAuthPostLogin(OAuth2User oAuth2User) {&#10;        String googleId = oAuth2User.getAttribute(&quot;sub&quot;);&#10;        user existUser = userRepo.findByGoogleId(googleId);&#10;&#10;        if (existUser == null) {&#10;            // If user doesn't exist, create a new one&#10;            user newUser = new user();&#10;            String email = oAuth2User.getAttribute(&quot;email&quot;);&#10;            String name = oAuth2User.getAttribute(&quot;name&quot;);&#10;            newUser.setGoogleId(googleId);&#10;            newUser.setEmail(email);&#10;            newUser.setUsername(name);&#10;            newUser.setPassword(&quot;&quot;); // Not needed for OAuth users&#10;&#10;            System.out.println(&quot;UserService: Creating new user with email: &quot; + email);&#10;            return userRepo.save(newUser);&#10;        } else {&#10;            // Optionally update user info if it has changed&#10;            String email = oAuth2User.getAttribute(&quot;email&quot;);&#10;            String name = oAuth2User.getAttribute(&quot;name&quot;);&#10;            existUser.setEmail(email);&#10;            existUser.setUsername(name);&#10;            userRepo.save(existUser);&#10;            System.out.println(&quot;UserService: Found and updated existing user with email: &quot; + email);&#10;            return existUser;&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.quantify.quantify_backend.service;&#10;&#10;import com.quantify.quantify_backend.model.balance;&#10;import com.quantify.quantify_backend.model.user;&#10;import com.quantify.quantify_backend.repository.user_repo;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.security.oauth2.core.user.OAuth2User;&#10;import org.springframework.stereotype.Service;&#10;&#10;import java.util.UUID;&#10;&#10;@Service&#10;public class google_user_service {&#10;&#10;    @Autowired&#10;    private user_repo userRepo;&#10;&#10;    public user processOAuthPostLogin(OAuth2User oAuth2User) {&#10;        String googleId = oAuth2User.getAttribute(&quot;sub&quot;);&#10;        user existUser = userRepo.findByGoogleId(googleId);&#10;&#10;        if (existUser == null) {&#10;            // If user doesn't exist, create a new one&#10;            user newUser = new user();&#10;            String email = oAuth2User.getAttribute(&quot;email&quot;);&#10;            String name = oAuth2User.getAttribute(&quot;name&quot;);&#10;            newUser.setGoogleId(googleId);&#10;            newUser.setEmail(email);&#10;            newUser.setUsername(name);&#10;            newUser.setPassword(&quot;&quot;); // Not needed for OAuth users&#10;&#10;            // Create a new balance for the user&#10;            balance newBalance = new balance();&#10;            newBalance.setAmount(100000.0); // Initial balance&#10;            newBalance.setUser(newUser);&#10;            newUser.setBalance(newBalance);&#10;&#10;&#10;            System.out.println(&quot;UserService: Creating new user with email: &quot; + email);&#10;            return userRepo.save(newUser);&#10;        } else {&#10;            // Optionally update user info if it has changed&#10;            String email = oAuth2User.getAttribute(&quot;email&quot;);&#10;            String name = oAuth2User.getAttribute(&quot;name&quot;);&#10;            existUser.setEmail(email);&#10;            existUser.setUsername(name);&#10;            userRepo.save(existUser);&#10;            System.out.println(&quot;UserService: Found and updated existing user with email: &quot; + email);&#10;            return existUser;&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>